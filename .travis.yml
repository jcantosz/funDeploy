sudo: required

language: node_js

notifications:
  email: false


# test on two node.js versions: 0.6 and 0.8
node_js:
  - "6"

# services:
#   - docker

before_install:
  #Install cloudfoundry
  - bash bin/setup.sh
  - bash bin/ansibleSetup.sh
  - aws s3 cp $S3_URI ./
  - chmod 755 jesse.tar 
  - tar -xvzf jesse.tar
 
  # Pull container.
  # - sudo apt-get -qq update
  # - 'docker pull webdevops/ansible:alpine-3'
#  - sudo apt-get install ansible
#  - sudo apt-get install python-virtualenv

before_script:
  # Writeback status update for pending if exists
  - bash [ -n "$TRAVIS_TAG" ] && export DEPLOY_STATUS_URL="https://api.github.com/repos/$TRAVIS_REPO_SLUG/deployments/$TRAVIS_TAG/statuses"
  - bash [ -n "$DEPLOY_STATUS_URL" ] && curl -H "Authorization: token $GH_TOKEN" -H "Content-Type: application/json" -X POST "$DEPLOY_STATUS_URL" -d "{\"state\": \"pending\",\"description\": \"Deployment to bluemix started\"}"

script:
  - ansible-playbook tstbk.yml
  - echo hello

after_failure:
  # Writeback status update for failure if exists
  - bash [ -n "$DEPLOY_STATUS_URL" ] && curl -H "Authorization: token $GH_TOKEN" -H "Content-Type: application/json" -X POST "$DEPLOY_STATUS_URL" -d "{\"state\": \"failure\",\"description\": \"Deployment to bluemix failed\"}" 

after_success:
  # Writeback status update for failure if exists
  - bash [ -n "$DEPLOY_STATUS_URL" ] && curl -H "Authorization: token $GH_TOKEN" -H "Content-Type: application/json" -X POST "$DEPLOY_STATUS_URL" -d "{\"state\": \"success\",\"description\": \"Deployment to bluemix success\"}"

